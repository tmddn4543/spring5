<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.nautestech.www.mapper.CallMapper">	
	<resultMap type="call" id="getSelectMap">
		<result property="c_id" column="c_id"/>
		<result property="btime" column="btime"/>
		<result property="etime" column="etime"/>
		<result property="caller" column="caller"/>
		<result property="called" column="called"/>
		<result property="callid" column="callid"/>
		<result property="dirname" column="dirname"/>
		<result property="filesize" column="filesize"/>
		<result property="fname" column="fname"/>
		<result property="emp_id" column="emp_id"/>
		<result property="branch_cd" column="branch_cd"/>
		<result property="emp_nm" column="emp_nm"/>
		<result property="system_id" column="system_id"/>
		<result property="is_statistics" column="is_statistics"/>
		<result property="auth_cd" column="auth_cd"/>
		<result property="rbtime" column="rbtime"/>
		<result property="retime" column="retime"/>
		<result property="duple_flag" column="duple_flag"/>
		<result property="rec_type" column="rec_type"/>
		<result property="group_id" column="group_id"/>
	</resultMap>
	
	
	<select id="setCreate" parameterType="hashmap">
		${createQry}
	</select>
	
	
	<select id="getListCount" resultType="int" parameterType="hashmap">
		select count(*)
		from `web_recording`.`call_history`
		use index(emp_id)
		use index(emp_nm)
		use index(group_id)
		use index(rec_type)
		use index(auth_cd)
		use index(branch_cd)
		use index(caller)
		use index(called)
		<include refid="where"/>
	</select>
	
	
	
	<select id="getListCountYYYYMM" resultType="int" parameterType="hashmap">
		select 
		count(*)
		from web_recording.call_history_${startYYYYMM}
		use index(emp_id)
		use index(emp_nm)
		use index(group_id)
		use index(rec_type)
		use index(auth_cd)
		use index(branch_cd)
		use index(caller)
		use index(called)
		<include refid="where"/>
		<if test='!startYYYYMM.equals(endYYYYMM)'>
		union all
		select 
		count(*)
		from web_recording.call_history_${endYYYYMM}
		use index(emp_id)
		use index(emp_nm)
		use index(group_id)
		use index(rec_type)
		use index(auth_cd)
		use index(branch_cd)
		use index(caller)
		use index(called)
		<include refid="where"/>
		</if>
	</select>
	
	
	
	
	<select id="getViewYYYYMM" resultMap="getSelectMap" parameterType="hashmap">
		select 
		c_id,
		btime,
		etime,
		caller,
		called,
		dirname,
		fname,
		emp_id,
		branch_cd,
		emp_nm,
		auth_cd,
		rec_type
		from web_recording.call_history_${startYYYYMM}
		use index(emp_id)
		use index(emp_nm)
		use index(group_id)
		use index(rec_type)
		use index(auth_cd)
		use index(branch_cd)
		use index(caller)
		use index(called)
		<include refid="where"/>
		<choose>
			<when test="!startYYYYMM.equals(endYYYYMM)">
			
			</when>
			<otherwise>
			order by c_id desc
			<if test='xlsx.equals("false")'>
			limit ${pagestart},${pagesize}
			</if>
			</otherwise>
		</choose>
		<if test='!startYYYYMM.equals(endYYYYMM)'>
		union all
		select 
		c_id,
		btime,
		etime,
		caller,
		called,
		dirname,
		fname,
		emp_id,
		branch_cd,
		emp_nm,
		auth_cd,
		rec_type
		from web_recording.call_history_${endYYYYMM}
		use index(emp_id)
		use index(emp_nm)
		use index(group_id)
		use index(rec_type)
		use index(auth_cd)
		use index(branch_cd)
		use index(caller)
		use index(called)
		<include refid="where"/>
		order by c_id desc
		<if test='xlsx.equals("false")'>
		limit ${pagestart},${pagesize}
		</if>
		</if>
		
	</select>
	
	
	<select id="getView" resultMap="getSelectMap" parameterType="hashmap">
		select 
		c_id,
		btime,
		etime,
		caller,
		called,
		dirname,
		fname,
		emp_id,
		branch_cd,
		emp_nm,
		auth_cd,
		rec_type
		 from `web_recording`.`call_history`
		use index(emp_id)
		use index(emp_nm)
		use index(group_id)
		use index(rec_type)
		use index(auth_cd)
		use index(branch_cd)
		use index(caller)
		use index(called)
		<include refid="where"/>
		order by c_id desc
		<if test='xlsx.equals("false")'>
		limit ${pagestart},${pagesize}
		</if>
	</select>
	
	
	
	<sql id="where">
		<where>
			<if test='emp_id !=null and !emp_id.equals("")'>
				emp_id = #{emp_id}
			</if>
			<if test='emp_nm !=null and !emp_nm.equals("")'>
				and emp_nm = #{emp_nm}
			</if>
			<if test='group_id !=null and !group_id.equals("")'>
				and group_id = #{group_id}
			</if>
			<if test='rec_type !=null and !rec_type.equals("")'>
				and rec_type = #{rec_type}
			</if>
			<if test='auth_cd !=null and !auth_cd.equals("")'>
				and auth_cd = #{auth_cd}
			</if>
			<if test='branch_cd !=null and !branch_cd.equals("")'>
				and branch_cd = #{branch_cd}
			</if>
			<if test='c_id !=null and !c_id.equals("")'>
				and c_id = #{c_id}
			</if>
			<if test='caller_attr != null and !caller_attr.equals("")'>
			<choose>
				<when test='caller_attr.equals("like")'>
				and caller like concat(concat('%', #{caller}), '%')
				</when>
				<otherwise>
				and caller = #{caller}
				</otherwise>
			</choose>
			</if>
			<if test='called_attr != null and !called_attr.equals("")'>
			<choose>
				<when test='called_attr.equals("like")'>
				and called like concat(concat('%', #{called}), '%')
				</when>
				<otherwise>
				and called = #{called}
				</otherwise>
			</choose>
			</if>
			<if test='bday !=null and !bday.equals("") and eday !=null and !eday.equals("")'>
				and btime between #{bday} and #{eday}
			</if>
			<choose>
				<when test='start_talk_time !=null and !start_talk_time.equals("") and end_talk_time !=null and !end_talk_time.equals("")'>
					and timestampdiff(second, btime,etime) between #{start_talk_time} and #{end_talk_time}
				</when>
				<otherwise>
					and timestampdiff(second, btime,etime) >= #{start_talk_time}
				</otherwise>
			</choose>
		</where>
	</sql>
</mapper>
